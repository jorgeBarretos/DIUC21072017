package ucuenca.tramitesdiuc;

/**
 * This class was automatically generated by the data modeler tool.
 */

import java.text.SimpleDateFormat;
import javax.persistence.Transient;
import java.text.ParseException;
import java.util.Date;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@javax.persistence.Entity
public class historial_proyecto implements java.io.Serializable
{

   static final long serialVersionUID = 1L;

   @javax.persistence.GeneratedValue(generator = "HISTORIAL_PROYECTO_ID_GENERATOR", strategy = javax.persistence.GenerationType.AUTO)
   @javax.persistence.Id
   @javax.persistence.SequenceGenerator(sequenceName = "HISTORIAL_PROYECTO_ID_SEQ", name = "HISTORIAL_PROYECTO_ID_GENERATOR")
   private java.lang.Long id;

   @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, fetch = javax.persistence.FetchType.EAGER)
   private java.util.List<ucuenca.tramitesdiuc.oficio> oficios;
   
   @Transient
   SimpleDateFormat formatoFecha=new SimpleDateFormat("dd/MM/yyyy");

   private java.lang.String observaciones_fisicos;

   private java.lang.String informe_digitales;

   private java.lang.String observaciones_digitales;
   
   @Temporal(TemporalType.DATE)
   private java.util.Date fecha_historial;
   @Temporal(TemporalType.DATE)
   private java.util.Date fecha_fisicos;
   @Temporal(TemporalType.DATE)
   private java.util.Date fecha_informe_historial;

   public historial_proyecto()
   {
   }

   public java.lang.Long getId()
   {
      return this.id;
   }

   public void setId(java.lang.Long id)
   {
      this.id = id;
   }

   public java.util.List<ucuenca.tramitesdiuc.oficio> getOficios()
   {
      return this.oficios;
   }

   public void setOficios(java.util.List<ucuenca.tramitesdiuc.oficio> oficios)
   {
      this.oficios = oficios;
   }

   public java.lang.String getObservaciones_fisicos()
   {
      return this.observaciones_fisicos;
   }

   public void setObservaciones_fisicos(java.lang.String observaciones_fisicos)
   {
      this.observaciones_fisicos = observaciones_fisicos;
   }

   public java.lang.String getInforme_digitales()
   {
      return this.informe_digitales;
   }

   public void setInforme_digitales(java.lang.String informe_digitales)
   {
      this.informe_digitales = informe_digitales;
   }

   public java.lang.String getObservaciones_digitales()
   {
      return this.observaciones_digitales;
   }

   public void setObservaciones_digitales(
         java.lang.String observaciones_digitales)
   {
      this.observaciones_digitales = observaciones_digitales;
   }

   public java.util.Date getFecha_historial()
   {
      return this.fecha_historial;
   }

   public void setFecha_historial(java.util.Date fecha_historial)
   {
      this.fecha_historial = corregirFecha(fecha_historial);
   }

   public java.util.Date getFecha_fisicos()
   {
      return this.fecha_fisicos;
   }

   public void setFecha_fisicos(java.util.Date fecha_fisicos)
   {
      this.fecha_fisicos = corregirFecha(fecha_fisicos);
   }

   public java.util.Date getFecha_informe_historial()
   {
      return this.fecha_informe_historial;
   }

   public void setFecha_informe_historial(java.util.Date fecha_informe_historial)
   {
      this.fecha_informe_historial = corregirFecha(fecha_informe_historial);
   }

   public historial_proyecto(java.lang.Long id,
         java.util.List<ucuenca.tramitesdiuc.oficio> oficios,
         java.lang.String observaciones_fisicos,
         java.lang.String informe_digitales,
         java.lang.String observaciones_digitales,
         java.util.Date fecha_historial, java.util.Date fecha_fisicos,
         java.util.Date fecha_informe_historial)
   {
      this.id = id;
      this.oficios = oficios;
      this.observaciones_fisicos = observaciones_fisicos;
      this.informe_digitales = informe_digitales;
      this.observaciones_digitales = observaciones_digitales;
      this.fecha_historial = corregirFecha(fecha_historial);
      this.fecha_fisicos = corregirFecha(fecha_fisicos);
      this.fecha_informe_historial = corregirFecha(fecha_informe_historial);
   }
   
   public Date corregirFecha(Date fecha){
        if(fecha!=null){
            int anio=Integer.parseInt(formatoFecha.format(fecha).substring(6));
            if(anio<999){
                    anio+=2000;
                    try {
                    fecha=formatoFecha.parse(formatoFecha.format(fecha).substring(0, 6)+anio);
                    } catch (ParseException ex) {
                        System.out.println("error parse: fecha");
                    }
            }   
        }
        return fecha;
   }

}